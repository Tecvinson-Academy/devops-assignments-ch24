name: Test and Merge Bash Script

on:
  pull_request:
    branches:
      - main
    paths:
      - 'bash-scripting/**'
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
    paths:
      - 'bash-scripting/**'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  test_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get list of changed .sh files
        id: get_changed_files
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '\.sh$' || true)
          else
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.sh$' || true)
          fi
          echo "Changed .sh files:"
          echo "$CHANGED_FILES"
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Run ShellCheck
        if: ${{ steps.get_changed_files.outputs.files != '' }}
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: './bash-scripting'
          severity: error
        
      - name: Run Spellcheck
        if: ${{ steps.get_changed_files.outputs.files != '' }}
        run: |
          echo "${{ steps.get_changed_files.outputs.files }}" | tr ' ' '\n' | while read file; do
            echo "Spellchecking $file"
            cspell $file || echo "Spellcheck found issues in $file"
          done
          
      - name: Execute the scripts in Docker
        if: ${{ steps.get_changed_files.outputs.files != '' }}
        run: |
          echo "${{ steps.get_changed_files.outputs.files }}" | tr ' ' '\n' | while read file; do
            echo "Executing $file in Docker"
            docker run --rm \
              -v "${{ github.workspace }}":/workspace \
              -w /workspace \
              ubuntu:20.04 \
              bash -c "
                apt-get update && \
                DEBIAN_FRONTEND=noninteractive apt-get install -y sudo && \
                chmod +x $file && \
                sudo $file
              "
          done
