name: Test and Merge Bash Script

on:
  pull_request:
    branches:
      - main
    paths:
      - 'bash-scripting/**'
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
    paths:
      - 'bash-scripting/**'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  test_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code safely
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # Step 2: Retrieve Changed .sh Files
      - name: Get list of changed .sh files
        shell: bash
        id: get_changed_files
        run: |
          echo "Fetching list of changed .sh files..."

          # Retrieve changed .sh files
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '\.sh$' || true)

          # Output the list for debugging
          echo "Changed .sh files:"
          echo "$CHANGED_FILES"

          # Set the output using the new method
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF"

      # Step 3: Run ShellCheck on Changed .sh Files
      - name: Run ShellCheck
        if: ${{ steps.get_changed_files.outputs.files != '' }}
        uses: azohra/shell-linter@latest
        with:
          path: '${{ steps.get_changed_files.outputs.files }}'

      - name: Set up Docker container
        run: docker pull ubuntu:20.04

      - name: Execute the scripts in Docker
        if: ${{ steps.get_changed_files.outputs.files != '' }}
        run: |
          echo "${{ steps.get_changed_files.outputs.files }}" | tr ' ' '\n' | while read file; do
            echo "Executing $file in Docker"
            docker run --rm \
              -v "${{ github.workspace }}":/workspace \
              -w /workspace \
              ubuntu:20.04 \
              bash -c "
                apt-get update && \
                DEBIAN_FRONTEND=noninteractive apt-get install -y sudo && \
                chmod +x $file && \
                sudo $file
              "
          done

      - name: Approve Pull Request
        if: ${{ steps.get_changed_files.outputs.files == 'true' && success() }}
        uses: juliangruber/approve-pull-request-action@v2.0.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
